# -*- coding: utf-8 -*-
# -----------------------------------------------------------------------------
# Copyright 2015-2016 by EcpyPulses Authors, see AUTHORS for more details.
#
# Distributed under the terms of the BSD license.
#
# The full license is in the file LICENCE, distributed with this software.
# -----------------------------------------------------------------------------
"""
"""
from inspect import getdoc
from atom.api import (Atom, Instance, Str, observe, ForwardTyped, Bool,
                      Value)
from enaml.core.api import Include
from enaml.core.object import Object
from enaml.layout.api import hbox, spacer, vbox
from enaml.widgets.api import (PushButton, Menu, Action, Container, Dialog,
                               Label, MultilineField)

from ecpy.utils.widgets.qt_list_str_widget import QtListStrWidget
from .browsing import SequenceSelector


# Circular import protections
def pulse_manager():
    from ..plugin import PulsesManagerPlugin
    return PulsesManagerPlugin


def abstract_config():
    from ..configs.base_config import AbstractConfig
    return AbstractConfig


enamldef BuilderView(Dialog): dial:
    """ Simple Dialog to add a sequence to an existing sequence.

    """
    #: Reference to the sequence manager (aka: the plugin).
    alias manager : selector.manager

    #: Config object corresponding to the currently selected sequence.
    attr config

    #: Reference to the sequence selector.
    alias selector : selector

    title = 'Select the sequence you want to add'

    func _update():
        if selector.selected_sequence:
            config, view = manager.get_config(selector.selected_sequence)
            print('here')
            print(config)
            print(view)
            if config is None:
                dial.config = None
                conf.objects = [Label(text=('No configuration view was'+ 
                                            'found for this task'))]
                return
            dial.config = config
            conf.objects = [view]
        else:
            dial.config = None
            conf.objects = []


    initialized :: _update()

    Container:
        constraints << [hbox(selector,
                             *tuple(list(conf.objects) + [vbox(ok,
                                                            cancel,
                                                            spacer)]))]
        SequenceSelector: selector:
            hug_width = 'strong'
            selected_sequence :: _update()

        Include: conf:
            pass

        PushButton: ok:
            text = 'Ok'
            enabled << config.ready if config else False
            clicked ::
                dial.accept()

        PushButton: cancel:
            text = 'Cancel'
            clicked ::
                dial.reject()


enamldef ContextBuilderView(Dialog): dial:
    """ Simple dialog to choose the context to add to a sequence.

    """
    attr manager
    attr context
    title = 'Select the context you want to use.'

    Container:
        constraints << [hbox(selector, doc, vbox(ok, cancel, spacer))]
        QtListStrWidget: selector:
            items << sorted(manager.contexts)
            selected_item = ''
            items ::
                selected_item = items[0]
            selected_item ::
                contexts_infos, _ = manager.get_contexts_infos([selected_item])
                dial.context = contexts_infos[selected_item].cls

        MultilineField: doc:
            text << getdoc(context) if context else ''

        PushButton: ok:
            text = 'Ok'
            enabled << bool(context)
            clicked ::
                dial.accept()

        PushButton: cancel:
            text = 'Cancel'
            clicked ::
                dial.reject()

